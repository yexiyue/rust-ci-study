name: CI
on:
  push:
    tags:
      - v*
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      APP_NAME: parse-json
    strategy:
      matrix:
        build: [linux, windows, macos]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive-name: "${{ env.APP_NAME }}-linux.tar.gz"
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            archive-name: "${{ env.APP_NAME }}-macos.tar.gz"
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            archive-name: "${{ env.APP_NAME }}-windows.7z"
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}
      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cd archive
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/${{ env.APP_NAME }}.exe" ./
            7z a "${{ matrix.archive-name }}" "${{ env.APP_NAME }}.exe"
          else
            cp "../target/${{ matrix.target }}/release/${{ env.APP_NAME }}" ./
            tar -czf "${{ matrix.archive-name }}" "${{ env.APP_NAME }}""
          fi
      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.archive-name }}
          path: archive/${{ matrix.archive-name }}
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: publish
        run: cargo publish --token ${{ secrets.CRATE_TOKEN }}
  
      
