name: CI
on:
  push:
    branches:
      - "master"
    tags:
      - v*
  workflow_dispatch: {}
env:
  APP_NAME: parse-json
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows, macos]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            archive-name: parse-json-linux.tar.gz
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            archive-name: parse-json-macos.tar.gz
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            archive-name: parse-json-windows.7z
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}
      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cd archive
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/${{ env.APP_NAME }}.exe" ./
            7z a "${{ matrix.archive-name }}" ${{ env.APP_NAME }}.exe
          else
            cp "../target/${{ matrix.target }}/release/${{ env.APP_NAME }}" ./
            tar -czf "${{ matrix.archive-name }}" ${{ env.APP_NAME }}
          fi
      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: archive/${{ matrix.archive-name }}
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls
      - name: Upload files to a GitHub release (Termux's fork)
        uses: termux/upload-release-action@v4.1.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.APP_NAME }}*
          asset_name: ${{ env.APP_NAME }}-${{ github.ref }}
          tag: ${{ github.ref }}
          body: "This is my release text"
          checksums: sha256,sha512,md5

  # publish:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #     - name: publish
  #       run: cargo publish --token ${{ secrets.CRATE_TOKEN }}
  
      
